// const me = {
//     name: "luka",
//     lastname: 'akofiani'
// }


// //----------CONST---------------
// // for(const key in me){
// //     key = "ragaca" //ERROR 
// //     console.log(key)
// // }




// //-----------LET--------------
// // for(let key in me){
// //     key = "ragaca" //input: ragaca ragaca
// //     console.log(key)
// // }



// //----------CONST---------------
//  for(const key in me){
     
//      console.log(me[key]) //input: luka
//                                 //akofiani
//  }

//--------------------------------------------

// const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]

// for(const key in numbers){
//     console.log(key) //output: 0 to 8
// }


// const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]

// for(const key in numbers){
//     console.log(numbers[key]) //output: 1 to 9 | typeof output: string
// }

//როცა for...in ციკლით გადავლას ვაკეთებთ მასივებზე და თუ ეს მასივი ინახება კონსტანტაში ინახება როგორც სტრინგი, რადგან იდეაში ეს for ციკლი შეიქმნა ობიექტისთვის, ობიექტში რომ გასაღებებისთვის გადაევლო და გასაღები არის სიტყვიერი მნიშვნელობა ჩვეულებრივი სტრინგი.


//-------------------------------------------------------------------------------


//თუ გვინდა რომ ეს თავიდან ავირიდოთ შეგვიძლია გამოვიყენოთ of keyword
//ამ შემთხვევაში უკვე გასაღებებს აღარ ვუთითებთ, ვუთითებს მნიშვნელობებს

// const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]

// for(const value of numbers){
//     console.log(value) //output: 1 to 9 | typeof output: number
// }


//---------------------------------------------------------------


// const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]

// for(const value of "numbers"){
//     console.log(value) //output: 1 to 9 | typeof output: string
// }


// //---------------------------------------------------------------


// const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]

// for(const value of me){
//     console.log(value) //output: ERROR
//}

    //for...in შემთხვევაში იტერაცია არ ხდება მასივზე, მაგრამ for...of შეთხვევაში არა, რადგან me მასივი არ არის გამეორებადი 
    
//----------------------------------------------------------------------------
//ამიტომ თუ გვინდა რო გადავუაროთ ობიექტს უნდა გამოვიყენოთ for...in
//თუ გვინდა რომ გადავუაროთ ობიექტის გარდა ნებისმიერ სხვა თანმიმდევრობას
    //რომელხზეც იტერაციაა შესაძლებელი ანუ აქვსინდექსები რომელსაც შეგვიძლია რომ გადავუაროთ მაშინ ვიყენებთ for...of
    
    
//JavaScript-ძრავის დაყრდნობით (გააჩნია ძრავას) არაა რეკომენდირებული რომ გადავუაროთ მასივს for...in რადგან შეიძლება ზოგერთ ბრაუზერში არ გამოიტანოს შედეგი თანმიმდევრულად ციკლმა